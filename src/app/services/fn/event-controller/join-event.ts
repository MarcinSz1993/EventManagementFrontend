/* tslint:disable */
/* eslint-disable */
/* Code generated by ng-openapi-gen DO NOT EDIT. */

import { HttpClient, HttpContext, HttpResponse } from '@angular/common/http';
import { Observable } from 'rxjs';
import { filter, map } from 'rxjs/operators';
import { StrictHttpResponse } from '../../strict-http-response';
import { RequestBuilder } from '../../request-builder';

import { JoinEventRequest } from '../../models/join-event-request';
import { JoinEventResponse } from '../../models/join-event-response';

export interface JoinEvent$Params {
  eventName: string;
  Authorization: string;
      body: JoinEventRequest
}

export function joinEvent(http: HttpClient, rootUrl: string, params: {
    eventName: string | undefined;
    body: JoinEventRequest
}, context?: HttpContext | undefined): Observable<StrictHttpResponse<JoinEventResponse>> {
  const rb = new RequestBuilder(rootUrl, joinEvent.PATH, 'put');
  if (params) {
    rb.query('eventName', params.eventName, {});
    rb.header('Authorization', params, {});
    rb.body(params.body, 'application/json');
  }

  return http.request(
    rb.build({ responseType: 'json', accept: '*/*', context })
  ).pipe(
    filter((r: any): r is HttpResponse<any> => r instanceof HttpResponse),
    map((r: HttpResponse<any>) => {
      return r as StrictHttpResponse<JoinEventResponse>;
    })
  );
}

joinEvent.PATH = '/api/events/join';
