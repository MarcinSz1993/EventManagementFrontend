/* tslint:disable */
/* eslint-disable */
/* Code generated by ng-openapi-gen DO NOT EDIT. */

import { HttpClient, HttpContext } from '@angular/common/http';
import { Injectable } from '@angular/core';
import { Observable } from 'rxjs';
import { map } from 'rxjs/operators';

import { BaseService } from '../base-service';
import { ApiConfiguration } from '../api-configuration';
import { StrictHttpResponse } from '../strict-http-response';

import { buyTicket } from '../fn/payment-controller/buy-ticket';
import { BuyTicket$Params } from '../fn/payment-controller/buy-ticket';
import { buyTicketsFromCart } from '../fn/payment-controller/buy-tickets-from-cart';
import { BuyTicketsFromCart$Params } from '../fn/payment-controller/buy-tickets-from-cart';

@Injectable({ providedIn: 'root' })
export class PaymentControllerService extends BaseService {
  constructor(config: ApiConfiguration, http: HttpClient) {
    super(config, http);
  }

  /** Path part for operation `buyTicketsFromCart()` */
  static readonly BuyTicketsFromCartPath = '/api/payments/cart';

  /**
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `buyTicketsFromCart()` instead.
   *
   * This method sends `application/json` and handles request body of type `application/json`.
   */
  buyTicketsFromCart$Response(params: BuyTicketsFromCart$Params, context?: HttpContext): Observable<StrictHttpResponse<string>> {
    return buyTicketsFromCart(this.http, this.rootUrl, params, context);
  }

  /**
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `buyTicketsFromCart$Response()` instead.
   *
   * This method sends `application/json` and handles request body of type `application/json`.
   */
  buyTicketsFromCart(params: BuyTicketsFromCart$Params, context?: HttpContext): Observable<string> {
    return this.buyTicketsFromCart$Response(params, context).pipe(
      map((r: StrictHttpResponse<string>): string => r.body)
    );
  }

  /** Path part for operation `buyTicket()` */
  static readonly BuyTicketPath = '/api/payments/';

  /**
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `buyTicket()` instead.
   *
   * This method sends `application/json` and handles request body of type `application/json`.
   */
  buyTicket$Response(params: BuyTicket$Params, context?: HttpContext): Observable<StrictHttpResponse<string>> {
    return buyTicket(this.http, this.rootUrl, params, context);
  }

  /**
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `buyTicket$Response()` instead.
   *
   * This method sends `application/json` and handles request body of type `application/json`.
   */
  buyTicket(params: BuyTicket$Params, context?: HttpContext): Observable<string> {
    return this.buyTicket$Response(params, context).pipe(
      map((r: StrictHttpResponse<string>): string => r.body)
    );
  }

}
